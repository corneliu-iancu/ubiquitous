/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyNftContract, MyNftContractInterface } from "../MyNftContract";

const _abi = [
  {
    inputs: [],
    name: "counter",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b5060b3806100236000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806361bc221a14602d575b600080fd5b60336047565b604051603e9190605a565b60405180910390f35b60005481565b6054816073565b82525050565b6000602082019050606d6000830184604d565b92915050565b600081905091905056fea264697066735822122093cb36b0b98125f8a6ad20d48e3f9a9ad27dc50d5f6b15a7be1c17c2fe28393c64736f6c63430008030033";

export class MyNftContract__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyNftContract> {
    return super.deploy(overrides || {}) as Promise<MyNftContract>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MyNftContract {
    return super.attach(address) as MyNftContract;
  }
  connect(signer: Signer): MyNftContract__factory {
    return super.connect(signer) as MyNftContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyNftContractInterface {
    return new utils.Interface(_abi) as MyNftContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyNftContract {
    return new Contract(address, _abi, signerOrProvider) as MyNftContract;
  }
}
