/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { HydraExchange, HydraExchangeInterface } from "../HydraExchange";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "atomicMatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMarketItems",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "ligtingId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address payable",
            name: "seller",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "sold",
            type: "bool",
          },
        ],
        internalType: "struct Exchange.Listing[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "listNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506001600081905550610f3c806100286000396000f3fe6080604052600436106100345760003560e01c806329aa3a42146100395780639005dcf914610064578063c922b17c14610080575b600080fd5b34801561004557600080fd5b5061004e6100a9565b60405161005b9190610c7e565b60405180910390f35b61007e60048036038101906100799190610a7a565b6103b9565b005b34801561008c57600080fd5b506100a760048036038101906100a29190610a2b565b6106d7565b005b606060006100b7600161095c565b905060006100c5600261095c565b6100cf600161095c565b6100d99190610d80565b90506000808267ffffffffffffffff81111561011e577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561015757816020015b610144610980565b81526020019060019003908161013c5790505b50905060005b848110156103ae57600073ffffffffffffffffffffffffffffffffffffffff166003600060018461018e9190610d2a565b815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561039b576000600360006001846101ef9190610d2a565b81526020019081526020016000209050806040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff16151515158152505083858151811061037f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200260200101819052506001846103979190610d2a565b9350505b80806103a690610e0e565b91505061015d565b508094505050505090565b600260005414156103ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f690610cc0565b60405180910390fd5b60026000819055506000600360008381526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820160009054906101000a900460ff161515151581525050905060008160a0015190506000826040015190508134146105b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105af90610ca0565b60405180910390fd5b826060015173ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610602573d6000803e3d6000fd5b50826020015173ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b815260040161064493929190610c47565b600060405180830381600087803b15801561065e57600080fd5b505af1158015610672573d6000803e3d6000fd5b5050505033836080019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060018360c00190151590811515815250506106c9600261096a565b505050600160008190555050565b6002600054141561071d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071490610cc0565b60405180910390fd5b600260008190555061072f600161096a565b600061073b600161095c565b90506040518060e001604052808281526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200183815260200160001515815250600360008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060160006101000a81548160ff0219169083151502179055509050508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161091c93929190610c47565b600060405180830381600087803b15801561093657600080fd5b505af115801561094a573d6000803e3d6000fd5b50505050506001600081905550505050565b600081600001549050919050565b6001816000016000828254019250508190555050565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000151581525090565b600081359050610a1081610ed8565b92915050565b600081359050610a2581610eef565b92915050565b600080600060608486031215610a4057600080fd5b6000610a4e86828701610a01565b9350506020610a5f86828701610a16565b9250506040610a7086828701610a16565b9150509250925092565b600060208284031215610a8c57600080fd5b6000610a9a84828501610a16565b91505092915050565b6000610aaf8383610b9b565b60e08301905092915050565b610ac481610dc6565b82525050565b610ad381610db4565b82525050565b610ae281610db4565b82525050565b6000610af382610cf0565b610afd8185610d08565b9350610b0883610ce0565b8060005b83811015610b39578151610b208882610aa3565b9750610b2b83610cfb565b925050600181019050610b0c565b5085935050505092915050565b610b4f81610dd8565b82525050565b6000610b62601e83610d19565b9150610b6d82610e86565b602082019050919050565b6000610b85601f83610d19565b9150610b9082610eaf565b602082019050919050565b60e082016000820151610bb16000850182610c29565b506020820151610bc46020850182610aca565b506040820151610bd76040850182610c29565b506060820151610bea6060850182610abb565b506080820151610bfd6080850182610abb565b5060a0820151610c1060a0850182610c29565b5060c0820151610c2360c0850182610b46565b50505050565b610c3281610e04565b82525050565b610c4181610e04565b82525050565b6000606082019050610c5c6000830186610ad9565b610c696020830185610ad9565b610c766040830184610c38565b949350505050565b60006020820190508181036000830152610c988184610ae8565b905092915050565b60006020820190508181036000830152610cb981610b55565b9050919050565b60006020820190508181036000830152610cd981610b78565b9050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610d3582610e04565b9150610d4083610e04565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d7557610d74610e57565b5b828201905092915050565b6000610d8b82610e04565b9150610d9683610e04565b925082821015610da957610da8610e57565b5b828203905092915050565b6000610dbf82610de4565b9050919050565b6000610dd182610de4565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610e1982610e04565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e4c57610e4b610e57565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f506c65617365207375626d6974207468652061736b696e672070726963650000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b610ee181610db4565b8114610eec57600080fd5b50565b610ef881610e04565b8114610f0357600080fd5b5056fea2646970667358221220a96f63fb6e8d8a310c2d1de01e769482934f8d8e252d3c1db9252ad0a7c151dc64736f6c63430008030033";

export class HydraExchange__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HydraExchange> {
    return super.deploy(overrides || {}) as Promise<HydraExchange>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): HydraExchange {
    return super.attach(address) as HydraExchange;
  }
  connect(signer: Signer): HydraExchange__factory {
    return super.connect(signer) as HydraExchange__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HydraExchangeInterface {
    return new utils.Interface(_abi) as HydraExchangeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HydraExchange {
    return new Contract(address, _abi, signerOrProvider) as HydraExchange;
  }
}
